{"ast":null,"code":"import _classCallCheck from\"/home/mritunjay/REACT/monster-rolodex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mritunjay/REACT/monster-rolodex/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/home/mritunjay/REACT/monster-rolodex/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/mritunjay/REACT/monster-rolodex/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{CardList}from'./components/card-list/card-list.component.jsx';import{SearchBox}from'./components/search-box/search-box.component.jsx';import logo from\"./logo.svg\";import'./App.css';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.state={monsters:[],searchField:''};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch('https://cors-anywhere.herokuapp.com/https://jsonplaceholder.typicode.com/users').then(function(response){return response.json();}).then(function(users){return _this2.setState({monsters:users});});}},{key:\"render\",value:function render(){var _this3=this;var monsters=this.state.monsters;var searchField=this.state.searchField;var filteredMonsters=monsters.filter(function(monster){return monster.name.toLowerCase().includes(searchField.toLowerCase());});console.log(monsters,searchField);return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"h1\",null,\" Monster Rolodex \"),/*#__PURE__*/React.createElement(SearchBox,{placeholder:\"search monsters\",handleChange:function handleChange(e){return _this3.setState({searchField:e.target.value});}}),/*#__PURE__*/React.createElement(CardList,{monsters:filteredMonsters}));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/home/mritunjay/REACT/monster-rolodex/src/App.js"],"names":["React","Component","CardList","SearchBox","App","state","monsters","searchField","fetch","then","response","json","users","setState","filteredMonsters","filter","monster","name","toLowerCase","includes","console","log","e","target","value"],"mappings":"gdAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAAQC,QAAR,KAAuB,gDAAvB,CAEA,OAASC,SAAT,KAA0B,kDAA1B,C,6BAGA,MAAO,WAAP,C,GAKMC,CAAAA,G,0FACA,cAAc,qCACZ,wBAEA,MAAKC,KAAL,CAAa,CACXC,QAAQ,CAAE,EADC,CAEXC,WAAW,CAAE,EAFF,CAAb,CAHY,aAOb,C,6EAEkB,iBACjBC,KAAK,CAAC,gFAAD,CAAL,CACGC,IADH,CACQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADhB,EAEGF,IAFH,CAEQ,SAAAG,KAAK,QAAI,CAAA,MAAI,CAACC,QAAL,CAAe,CAACP,QAAQ,CAAEM,KAAX,CAAf,CAAJ,EAFb,EAGD,C,uCAEQ,iBACP,GAAMN,CAAAA,QAAQ,CAAG,KAAKD,KAAL,CAAWC,QAA5B,CACA,GAAMC,CAAAA,WAAW,CAAG,KAAKF,KAAL,CAAWE,WAA/B,CACA,GAAMO,CAAAA,gBAAgB,CAAGR,QAAQ,CAACS,MAAT,CAAgB,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCZ,WAAW,CAACW,WAAZ,EAApC,CAAJ,EAAvB,CAAzB,CAEFE,OAAO,CAACC,GAAR,CAAYf,QAAZ,CAAqBC,WAArB,EAEA,mBACI,2BAAK,SAAS,CAAC,KAAf,eACA,kDADA,cAGA,oBAAC,SAAD,EACE,WAAW,CAAG,iBADhB,CAEE,YAAY,CAAI,sBAAAe,CAAC,QAAI,CAAA,MAAI,CAACT,QAAL,CAAc,CAAEN,WAAW,CAAEe,CAAC,CAACC,MAAF,CAASC,KAAxB,CAAd,CAAJ,EAFnB,EAHA,cAQA,oBAAC,QAAD,EAAU,QAAQ,CAAIV,gBAAtB,EARA,CADJ,CAaC,C,iBApCWb,S,EAuClB,cAAeG,CAAAA,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport {CardList} from './components/card-list/card-list.component.jsx';\n\nimport { SearchBox } from './components/search-box/search-box.component.jsx';\n\nimport logo from './logo.svg';\nimport './App.css';\n\n\n\n\nclass App extends Component {\n      constructor() {\n        super();\n\n        this.state = {\n          monsters: [],\n          searchField: ''\n        };\n      }\n\n      componentDidMount(){\n        fetch('https://cors-anywhere.herokuapp.com/https://jsonplaceholder.typicode.com/users')\n          .then(response => response.json())\n          .then(users => this.setState(({monsters: users})))\n      }\n\n      render() {\n        const monsters = this.state.monsters;\n        const searchField = this.state.searchField;\n        const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()),\n        );\n      console.log(monsters,searchField)\n\n      return(\n          <div className=\"App\">\n          <h1> Monster Rolodex </h1>\n\n          <SearchBox\n            placeholder = 'search monsters'\n            handleChange = {e => this.setState({ searchField: e.target.value })}\n          />\n\n          <CardList monsters = {filteredMonsters}></CardList>\n          \n          </div>\n      );\n      };\n    }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}